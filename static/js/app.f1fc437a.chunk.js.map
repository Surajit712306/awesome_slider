{"version":3,"sources":["App.js"],"names":["images","Tab","React","forwardRef","ref","item","onItemPress","index","style","color","margin","padding","fontSize","fontWeight","marginHorizontal","onPress","e","title","Indicator","layouts","scrollX","scrollX1","dimensions","useDimensions","useState","map","layout","x","outputRangeTranslate","setOutputRangeTranslate","useEffect","outputRange","output","inputRange","_","window","width","indicatorWidth","interpolate","extrapolate","translateX","View","position","bottom","paddingBottom","backgroundColor","borderWidth","borderColor","transform","perspective","Tabs","containerRef","useRef","setLayouts","setScrollX1","routes","createRef","_layouts","forEach","route","current","measureLayout","findNodeHandle","y","height","push","length","onScroll","nativeEvent","contentOffset","scrollEventThrottle","contentContainerStyle","minWidth","horizontal","showsHorizontalScrollIndicator","key","Comp","props","insets","useSafeAreaInsets","Animated","Value","useCallback","offset","scrollToOffset","flex","FlatList","data","keyExtractor","toString","renderItem","source","uri","resizeMode","pagingEnabled","event","useNativeDriver","top","left","right","overflow","App"],"mappings":"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","file":"static/js/app.f1fc437a.chunk.js","sourcesContent":["import React, {useState, useRef, useEffect, useCallback} from 'react';\nimport {View, Text, Animated, ScrollView, findNodeHandle, Image } from 'react-native';\nimport { SafeAreaProvider, SafeAreaView, useSafeAreaInsets} from 'react-native-safe-area-context';\nimport { useDimensions } from '@react-native-community/hooks';\n\nconst images = [\n  'https://wallpaper-house.com/data/out/5/wallpaper2you_77895.jpg',\n  'https://wallpaper-house.com/data/out/5/wallpaper2you_77896.jpg',\n  'https://wallpaper-house.com/data/out/5/wallpaper2you_77897.jpg',\n  'https://wallpaper-house.com/data/out/5/wallpaper2you_77898.jpg',\n  'https://wallpaper-house.com/data/out/5/wallpaper2you_77899.jpg',\n  'https://wallpaper-house.com/data/out/5/wallpaper2you_77904.jpg'\n];\n\n\nconst Tab = React.forwardRef(({item, onItemPress, index}, ref) => {\n\n  return (\n      <Text  ref={ref}  style={{\n        color: 'white',\n        margin: 10,\n        padding: 10,\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginHorizontal: 'auto',\n      }}\n      onPress={e => {\n        onItemPress(index)\n      }}\n      >\n        {item.title}\n      </Text>\n  );\n});\n\nconst Indicator = ({layouts, scrollX, scrollX1}) => {\n  const dimensions = useDimensions();\n  const [outputRangeTranslate, setOutputRangeTranslate] = useState(layouts.map(layout => layout.x));\n\n  useEffect(() => {\n    const outputRange = layouts.map(layout => layout.x);\n    setOutputRangeTranslate(outputRange.map(output => output - scrollX1));\n  },  [scrollX1, layouts]);\n\n  const inputRange = layouts.map((_, index) => index * dimensions.window.width);\n\n  let outputRange = layouts.map(layout => layout.width);\n  const indicatorWidth = scrollX.interpolate(\n    {\n      inputRange,\n      outputRange,\n      extrapolate: 'clamp'\n    }\n  );\n\n\n  const translateX = scrollX.interpolate({\n    inputRange,\n    outputRange: outputRangeTranslate,\n    extrapolate: 'clamp'\n  });\n\n  return (\n    <Animated.View style={{\n      position: 'absolute',\n      bottom: 0,\n      width: indicatorWidth,\n      paddingBottom: 3,\n      backgroundColor: 'white',\n      borderWidth: 1,\n      borderColor: 'white',\n      transform: [{translateX}, {perspective: 1000}]\n    }}>\n    </Animated.View>\n  );\n}\n\nconst Tabs = ({scrollX, onItemPress}) => {\n  const dimensions = useDimensions();\n  const containerRef = useRef();\n  const [layouts, setLayouts] = useState([]);\n  const [scrollX1, setScrollX1] = useState(0);\n  \n  const routes = [\n    {\n      title: \"First\",\n      ref: React.createRef()\n    },\n    {\n      title: \"Second\",\n      ref: React.createRef()\n    },\n    {\n      title: \"Third\",\n      ref: React.createRef()\n    },\n    {\n      title: \"Fourth\",\n      ref: React.createRef()\n    },\n    {\n      title: \"Fifth\",\n      ref: React.createRef()\n    },\n    {\n      title: \"Sixth\",\n      ref: React.createRef()\n    }\n  ];\n\n  useEffect(() => {\n    const _layouts = [];\n    routes.forEach(route => {\n      route.ref.current.measureLayout(findNodeHandle(containerRef.current), (x, y, width, height) => {\n          const layout = {\n            x,\n            y,\n            width,\n            height\n          };\n          _layouts.push(layout);\n          if(_layouts.length === routes.length)\n          {\n            setLayouts(_layouts);\n          }\n      });\n    });\n\n  }, []);\n\n  return (\n  <>\n    <ScrollView ref={containerRef}\n      onScroll={e => {\n        setScrollX1(e.nativeEvent.contentOffset.x);\n      }}\n      scrollEventThrottle={16}\n      style={{\n        backgroundColor: 'black',\n      }}\n      contentContainerStyle={{\n        minWidth: dimensions.window.width\n      }}\n      horizontal showsHorizontalScrollIndicator={false}>\n      {routes.map((item, index) => (\n        <Tab key={index} item={item} ref={item.ref} index={index} onItemPress={onItemPress} />\n      ))}\n    </ScrollView>\n    {layouts.length > 0 && <Indicator layouts={layouts} scrollX={scrollX} scrollX1={scrollX1} />}\n  </>);\n}\n\nconst Comp = props => {\n\n  const dimensions = useDimensions();\n  const insets = useSafeAreaInsets(); \n  const scrollX = useRef(new Animated.Value(0)).current;\n  const ref = useRef();\n\n  const onItemPress = useCallback(index => {\n    const offset = index * dimensions.window.width;\n    ref.current?.scrollToOffset({\n      offset\n    });\n  }, []);\n  \n  return (\n    <SafeAreaView style={{\n      flex: 1\n    }}>\n      <Animated.FlatList\n        ref={ref}\n        data={images}\n        keyExtractor={(_, index) => index.toString()} \n        renderItem={({item}) => (\n          <Image \n            source={{uri: item}}\n            style={{\n              width: dimensions.window.width,\n              height: dimensions.window.height\n            }}\n            resizeMode=\"cover\"\n          />\n        )}\n        horizontal\n        pagingEnabled\n        showsHorizontalScrollIndicator={false}\n        onScroll={Animated.event([\n          {nativeEvent: { contentOffset: {x : scrollX}}}\n        ],\n        {useNativeDriver: false})}\n      />\n      <View style={{\n        position: 'absolute',\n        top: insets.top,\n        left: 0,\n        right: 0,\n        overflow: 'hidden'\n      }}>\n        <Tabs scrollX={scrollX} onItemPress={onItemPress} />\n      </View>\n    </SafeAreaView>\n  );\n}\n\nfunction App()\n{\n\n   return (\n     <SafeAreaProvider>\n       <Comp />\n     </SafeAreaProvider>\n   );\n}\n\nexport default App;\n\n"],"sourceRoot":""}